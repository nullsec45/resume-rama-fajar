---
import GlobeIcon from "../svg-components/globe.astro";
import CheckIcon from "../svg-components/check.astro";
import SvgIcon from "../components/SvgIcon.astro";
import Divider from "../components/Divider.astro";

// Use this code if you want to get JSON data from an API
import type { Resume } from "../types";

// const response = await fetch(import.meta.env.API_URL);
import data from "../../data-example.json"
// const data: Resume = await response.json();

// Use the code below if you want to use a local JSON file.

// You can choose the methods that best fit your needs and delete the unused ones.
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{data.name} - {data.title}</title>
  </head>
  <body class="container mx-auto">
    <div class="bg-white py-24 sm:py-8">
      <div class="mx-auto max-w-3xl px-6 lg:px-8">
        <div class="mx-auto flex">
          <img
            src={data.avatarUrl}
            class="rounded-full h-24"
          />
          <div class="flex-1 self-center text-right">
            <div
              class="text-4xl font-bold tracking-tight text-gray-900 sm:text-3xl"
            >
              {data.name}
            </div>
            <p class="text-lg leading-8 text-gray-600 font-bold">
              {data.title}
            </p>
            <p class="text-sm leading-8 text-gray-600 self-center">
              <a href={data.addressUrl} target="_blank">
                <GlobeIcon display="inline" /><span class="hover:underline"
                  >{data.address}</span
                >
              </a>
            </p>
            <div class="flex justify-end mt-[-30px] mb-[-60px]">
              {
                data.links.map((item) => (
                  <a href={item.url} target="_blank" class="self-center">
                    <SvgIcon id={item.id} />
                  </a>
                ))
              }
            </div>
          </div>
        </div>

        <div class="text-2xl font-bold tracking-tight text-gray-900 sm:text-xl mt-20">
          Resume Objectives
        </div>
        <Divider />
        <div>
          <ul
            role="list"
            class="mt-3 space-y-1 text-sm leading-6 text-gray-600"
          >
            {data.objectives.map((item) => (
              <li class="flex gap-x-2">
                <CheckIcon />{item}
              </li>
            ))}
          </ul>
        </div>

        <div class="text-2xl font-bold tracking-tight text-gray-900 sm:text-xl mt-8">
          Skills
        </div>
        <Divider />

        <dl class="mt-5 grid grid-cols-1 gap-5 sm:grid-cols-2">
          {data.skills.map((item) => (
            <div class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6">
              <dt class="truncate text-sm font-semibold text-gray-500">{item.type}</dt>
              <dd class="mt-2 text-sm font-medium text-gray-500">{item.tools.join(", ")}</dd>
            </div>
          ))}
        </dl>

        <div class="text-2xl font-bold tracking-tight text-gray-900 sm:text-xl mt-8">
          Experiences
        </div>
        <Divider />

        {data.workExperiences.sort((a, b) => b.id - a.id).map((item) => (
          <div class="mt-5">
            <div class="text-sm font-medium tracking-tight text-gray-900 sm:text-lg mt-2">
                 {item.companyName !== "" ? `${item.companyName},` : ""} <span class="text-gray-700 font-normal">{item.roles}</span>
              <span class="inline-flex items-center rounded-md bg-blue-50 px-2 py-0.5 text-xs font-medium text-blue-700 ring-1 ring-inset ring-blue-700/10 ml-2">{item.type}</span>
            </div>

            <div class="text-sm font-normal tracking-tight text-gray-900 sm:text-sm">
              {item.location !== "" ? `${item.location},` : ""} {item.years}
            </div>

            <ul
              role="list"
              class="mt-1 space-y-1 text-sm leading-6 text-gray-600"
            >
              {item.jobDesc.map((job) => (
                <li class="flex gap-x-2">
                  <CheckIcon />{job}
                </li>
              ))}
            </ul>
          </div>
        ))}

        <div class="text-2xl font-bold tracking-tight text-gray-900 sm:text-xl mt-8">
          Education
        </div>
        <Divider />

        {data.educations.sort((a, b) => b.id - a.id).map((item) => (
          <div class="mb-5">
            <div class="text-sm font-medium tracking-tight text-gray-900 sm:text-lg mt-2">
              {item.title}
            </div>

            <div class="text-sm font-normal tracking-tight text-gray-900 sm:text-sm">
                 {item.schoolName}, {item.location}, {item.years}
            </div>
          </div>
        ))}

        <div class="text-2xl font-bold tracking-tight text-gray-900 sm:text-xl mt-8">
          Additional Activities
        </div>
        <Divider />

        {data.additionalActivities.map((item) => (
          <div class="mb-5">
            <div class="text-sm font-medium tracking-tight text-gray-900 sm:text-lg mt-2">
              {item.type}
            </div>

            <ul
              role="list"
              class="mt-1 space-y-1 text-sm leading-6 text-gray-600"
            >
              {item.activities.map((activity) => (
                <li class="flex gap-x-2">
                  <CheckIcon />{activity}
                </li>
              ))}
            </ul>

          </div>
        ))}

      </div>
    </div>
  </body>
</html>
